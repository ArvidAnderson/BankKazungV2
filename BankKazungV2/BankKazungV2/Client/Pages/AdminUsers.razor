@page "/admin/users"
@attribute [Authorize]
@using BankKazungV2.Shared.DataTransferObjects
@using BankKazungV2.Shared.Models
@inject HttpClient Http
@inject NavigationManager NavigationManager

<PageTitle>Users</PageTitle>

@if (users == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row">
        <div class="col-sm-8">
            <div class="card">
                <div class="card-header">
                    <h4>All Users</h4>
                </div>
                <div class="card-body">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th scope="col">User ID</th>
                                <th scope="col">First Name</th>
                                <th scope="col">Last Name</th>
                                <th scope="col">Email Adress</th>
                                <th scope="col">Age</th>
                
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var user in users)
                            {
                                <tr>
                                    <td>@user.UserID</td>
                                    <td>@user.FirstName</td>
                                    <td>@user.LastName</td>
                                    <td>@user.Email</td>
                                    <td>@user.Age</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <div class="mt-2 col-sm-4">
            <div class="card">
                <div class="card-header">
                    <h4>Add user</h4>
                </div>
                <div class="card-body">
                    <EditForm Model="@newUser" OnValidSubmit="HandleAddNewUser">
                        <div class="form-group">
                            <label for="FirstName">First Name</label>
                            <InputText class="form-control" id="FirstName" @bind-Value="newUser.FirstName"></InputText>
                        </div>
                        <div class="form-group">
                            <label for="LastName">Last Name</label>
                            <InputText class="form-control" id="LastName" @bind-Value="newUser.LastName"></InputText>
                        </div>
                        <div class="form-group">
                            <label for="Email">Email</label>
                            <InputText class="form-control" id="Email" @bind-Value="newUser.Email"></InputText>
                        </div>
                        <div class="form-group">
                            <label for="Phone">Phone</label>
                            <InputText class="form-control" id="Phone" @bind-Value="newUser.Phone"></InputText>
                        </div>
                        <div class="form-group">
                            <label for="Age">Age</label>
                            <InputNumber class="form-control" id="Age" @bind-Value="newUser.Age"></InputNumber>
                        </div>
                        <div class="form-group">
                            <label for="Password">Password</label>
                            <InputText class="form-control" id="Password" @bind-Value="newUser.Password"></InputText>
                        </div>
                        <button class="mt-2 btn btn-primary">Create User</button>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>

}



@code {
    private User[]? users;

    protected override async Task OnInitializedAsync()
    {
        users = await Http.GetFromJsonAsync<User[]>("api/User");
    }

    private async Task RefreshUsers()
    {
        users = await Http.GetFromJsonAsync<User[]>("api/User");
    }

    private UserRegister newUser = new UserRegister();

    private async Task HandleAddNewUser()
    {
        var registerUser = await Http.PostAsJsonAsync("api/Auth/register", newUser);
        await RefreshUsers();
        newUser = new UserRegister();
    }
}
