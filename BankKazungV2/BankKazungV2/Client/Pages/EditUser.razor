@page "/admin/user/edit/{UserID:int}"
@inject HttpClient Http
@using BankKazungV2.Shared.Models

@if(!userFound)
{
    <div class="alert alert-danger" role="alert">
        User not found!
    </div>
}
@if(userFound)
{
    <div class="content">
        <div class="card">
            <div class="card-header">
                <h4>Edit User - @user.FirstName @user.LastName</h4>
            </div>
            <div class="card-body">
                <EditForm Model="user" OnValidSubmit="HandleUpdateUser">
                    <div class="form-group">
                        <label for="FirstName">First Name</label>
                        <InputText id="FirstName" @bind-Value="user.FirstName" class="form-control"></InputText>
                    </div>
                    <div class="form-group">
                        <label for="LastName">Last Name</label>
                        <InputText id="LastName" @bind-Value="user.LastName" class="form-control"></InputText>
                    </div>
                    <div class="form-group">
                        <label for="Email">Email</label>
                        <InputText id="Email" @bind-Value="user.Email" class="form-control"></InputText>
                    </div>
                    <div class="form-group">
                        <label for="Age">Age</label>
                        <InputNumber id="Age" @bind-Value="user.Age" class="form-control"></InputNumber>
                    </div>
                    <div class="form-group">
                        <label for="Phone">Phone</label>
                        <InputText id="Phone" @bind-Value="user.Phone" class="form-control"></InputText>
                    </div>
            
                    <button type="submit" class="mt-2 btn btn-success">Save Changes</button>
                    <button @onclick="HandleRemoveUser" class="mt-2 btn btn-danger">Remove User</button>
                </EditForm>
            </div>
            <div class="card-footer"></div>
        </div>        
    </div>    
}


@code {
    [Parameter]
    public int UserID { get; set; }

    private User user = new User();

    private bool userFound = true;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            user = await Http.GetFromJsonAsync<User>($"api/User/{UserID}");
            userFound = true;
        } catch
        {
            userFound = false;
        }

    }

    private async Task HandleUpdateUser()
    {
        var userUpdate = await Http.PutAsJsonAsync<User>($"api/User/update/{user.UserID}", user);
    }

    private async Task HandleRemoveUser()
    {
        var userRemove = await Http.DeleteAsync($"api/User/remove/{user.UserID}");
    }
}
