@page "/overview"
@attribute [Authorize]
@inject HttpClient Http
@inject NavigationManager NavigationManager
@using BankKazungV2.Shared.Models

<AuthorizeView Context="Auth">
    <div class="container">
        <div class="alert alert-secondary">
            <h5>Welcome {FirstName} {LastName}</h5>
        </div>
    </div>
    <div class="m-3"></div>
    <div class="container">
        <div class="card">
            <div class="card-header">
                <h4>Accounts</h4>
            </div>
            <div class="card-body">
                @if(accountsLoading == true)
                {
                    <div class="container-fluid d-flex align-items-center justify-content-center">
                        <p>Loading...</p>
                    </div>
                }
                @if(accounts == null && accountsLoading == false)
                {
                    <div class="container-fluid d-flex align-items-center justify-content-center">
                        <p>Error</p>
                    </div>                    
                } 
                @if(accounts != null && accountsLoading == false)
                {
                    <table class="table table-hover">
                        <thead class="">
                            <tr>
                                <th scope="col">Name</th>
                                <th scope="col">Balance</th>
                
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var account in accounts)
                            {
                                <tr @onclick="(() => ViewAccount(account.AccountID))">
                                    <td>@account.Name</td>
                                    <td>@account.Balance</td>
                                </tr>
                            }
                        </tbody>
                    </table>   
                }
            </div>
        </div>
    </div>
    <div class="m-3"></div>
    <div class="container">
        <div class="card">
            <div class="card-header">
                <h4>Cards</h4>
            </div>
            <div class="card-body">
                <div class="card">
                    <div class="card-body">
                        @if(cardsLoading == true)
                        {
                            <div class="container-fluid d-flex align-items-center justify-content-center">
                                <p>Loading...</p>
                            </div>
                        }
                        @if(cards == null && cardsLoading == false)
                        {
                            <div class="container-fluid d-flex align-items-center justify-content-center">
                                <p>Error</p>
                            </div>                            
                        }
                        @if(cards != null && cardsLoading == false)
                        {
                            <div class="row">
                                @foreach (var card in cards)
                                {
                                    <div @onclick="(() => ViewCard(card.CardID))" class="col-sm my-2">
                                        <div class="card">
                                            <div class="card-header">
                                                <h5>@card.Name</h5>
                                            </div>
                                            <div class="card-body">
                                                <p>@card.Type</p>
                                                @if(card.Type == CardTypes.Credit)
                                                {
                                                    <span>@card.CreditLimit</span>
                                                }
                                                @if(card.Type == CardTypes.Debit)
                                                {
                                                    <span>@card.Balance</span> 
                                                }
                                                
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>

    </div> 
</AuthorizeView>  

@code {
    private Account[]? accounts;
    bool accountsLoading = true;

    private Card[]? cards;
    bool cardsLoading = true;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            accounts = await Http.GetFromJsonAsync<Account[]>("api/Account/jwt/get/accounts");
            accountsLoading = false;
        } catch
        {
            Console.WriteLine("Error Getting Accounts");
            accountsLoading = false;
        }

        try
        {
            cards = await Http.GetFromJsonAsync<Card[]>("api/Card/jwt/get/cards");
            cardsLoading = false;
        } catch
        {
            Console.WriteLine("Error Getting Cards");
            cardsLoading = false;
        }

    }

    private void ViewAccount(int _accountID)
    {
        Console.WriteLine($"View Account {_accountID}");
        NavigationManager.NavigateTo($"/account/{_accountID}");
    }

    private void ViewCard(int _cardID)
    {
        Console.WriteLine($"View Card {_cardID}");
        NavigationManager.NavigateTo($"/card/{_cardID}");
    }

}
