@inject HttpClient Http
@using BankKazungV2.Shared.Models

@if(user == null) {
    <h2>Loading dank</h2>
}
else
{
    <div class="modal fade show" id="EditUserModal">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Edit User @user.FirstName @user.LastName</h4>
                </div>
                <div class="modal-body">
                    <EditForm Model="user" OnValidSubmit="OnValidSumbit">
                        <div class="form-group">
                            <label for="FirstName">First Name</label>
                            <InputText id="FirstName" @bind-Value="user.FirstName" class="form-control"></InputText>
                        </div>
                        <div class="form-group">
                            <label for="LastName">Last Name</label>
                            <InputText id="LastName" @bind-Value="user.LastName" class="form-control"></InputText>
                        </div>
                        <div class="form-group">
                            <label for="Email">Email</label>
                            <InputText id="Email" @bind-Value="user.Email" class="form-control"></InputText>
                        </div>
                        <div class="form-group">
                            <label for="Age">Age</label>
                            <InputNumber id="Age" @bind-Value="user.Age" class="form-control"></InputNumber>
                        </div>
                        <div class="form-group">
                            <label for="Phone">Phone</label>
                            <InputText id="Phone" @bind-Value="user.Phone" class="form-control"></InputText>
                        </div>
            
                        <button type="submit" class="mt-2 btn btn-success">Save</button>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public int UserID { get; set; }

    private User user = new User();

    protected override async Task OnInitializedAsync()
    {

        user = await Http.GetFromJsonAsync<User>($"api/User/{UserID}");
    }

    private async void OnValidSumbit()
    {
        var userUpdate = await Http.PutAsJsonAsync<User>($"api/User/{user.UserID}", user);
    }
}
